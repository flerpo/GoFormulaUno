// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-07-25 21:55:49.709193109 +0200 CEST m=+0.015606697

package docs

import (
	"bytes"
	"encoding/json"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/tracks/": {
            "get": {
                "description": "get track",
                "produces": [
                    "application/json"
                ],
                "summary": "Get track",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.trackInfoModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.responseMessage"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.responseMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Meaningful message"
                },
                "resourceId": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "main.trackInfoModel": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string",
                    "example": "Sweden"
                },
                "layout_image": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "length": {
                    "type": "integer"
                },
                "official_record": {
                    "type": "string"
                },
                "trackname": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "GoFormulaUno",
	Description: "Used for GoFormululaUno.",
}

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
